{"version":3,"sources":["webpack:///src/app/usuario/perfil/perfil.page.html","webpack:///src/app/services/app.service.ts","webpack:///src/app/usuario/perfil/perfil-routing.module.ts","webpack:///src/app/usuario/perfil/perfil.module.ts","webpack:///src/app/usuario/perfil/perfil.page.scss","webpack:///src/app/usuario/perfil/perfil.page.ts"],"names":["AppService","router","alertController","storage","title","text","create","header","message","buttons","handler","alert","present","Promise","resolve","reject","get","type","subscribe","next","data","error","console","providedIn","routes","path","component","PerfilPageRoutingModule","imports","forChild","exports","PerfilPageModule","declarations","PerfilPage","app","isProfile","then","uData","userData","JSON","parse","pData","userProfile","navigate","profileURL","provider","myAlert","displayName","window","open","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+FCIf;;;UAMaA,UAAU;AAErB,4BACSC,MADT,EAESC,eAFT,EAIE;AACQC,eALV,EAK6B;AAAA;;AAJpB,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AAGC,eAAAC,OAAA,GAAAA,OAAA;AACL;;AARgB;AAAA;AAAA,kCAUPC,KAVO,EAUQC,IAVR,EAUsB;;;;;;;;AAC3B,6BAAM,KAAKH,eAAL,CAAqBI,MAArB,CAA4B;AAC9CC,8BAAM,EAAEH,KADsC;AAE9CI,+BAAO,EAAEH,IAFqC;AAG9CI,+BAAO,EAAE,CAAC;AACRJ,8BAAI,EAAE,IADE;AAERK,iCAAO,EAAE,mBAAM;AAAE,mCAAO,IAAP;AAAc;AAFvB,yBAAD;AAHqC,uBAA5B,CAAN;;;AAARC,2B;;AAQN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;AACD,WApBoB,CAsBrB;;AAtBqB;AAAA;AAAA,sCAuBH;;;;;;;;wDAGT,IAAIC,OAAJ,CAAiB,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAE3C;AACA,6BAAI,CAACZ,OAAL,CAAaa,GAAb,CAAiB,aAAjB,EAAgC;AAAEC,8BAAI,EAAE;AAAR,yBAAhC,EAAoDC,SAApD,CAA8D;AAC5DC,8BAAI,EAAE,cAACC,IAAD,EAAU;AAEd;AACA,gCAAIA,IAAJ,EAAUN,OAAO,CAAC,IAAD,CAAP,CAAV,CAEA;AAFA,iCAGKA,OAAO,CAAC,KAAD,CAAP;AACN,2BAR2D;AAU5D;AACAO,+BAAK,EAAE,eAACA,MAAD;AAAA,mCAAWC,OAAO,CAACD,KAAR,CAAcA,MAAd,CAAX;AAAA;AAXqD,yBAA9D;AAaD,uBAhBM,C;;;;;;;;;AAiBR;AA3CoB;;AAAA;AAAA,S;;;;gBATd;;gBACA;;gBAGA;;;;AAKIrB,gBAAU,6DAHtB,iEAAW;AACVuB,kBAAU,EAAE;AADF,OAAX,CAGsB,GAAVvB,UAAU,CAAV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLb,UAAMwB,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,uBAAuB;AAAA;AAAA,O;;AAAvBA,6BAAuB,6DAJnC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAImC,GAAvBH,uBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,gBAAgB;AAAA;AAAA,O;;AAAhBA,sBAAgB,6DAT5B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,8EAJO,CADD;AAORI,oBAAY,EAAE,CAAC,uDAAD;AAPN,OAAT,CAS4B,GAAhBD,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+FCEf;;;UAUaE,UAAU;AAMrB,6BAEE;AACOhC,cAHT,EAISiC,GAJT,EAKS/B,OALT,EAK4B;AAAA;;AAFnB,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAiC,GAAA,GAAAA,GAAA;AACA,eAAA/B,OAAA,GAAAA,OAAA;AACJ;;AAZgB;AAAA;AAAA,qCAcV,CAAG,CAdO,CAgBrB;;AAhBqB;AAAA;AAAA,6CAiBF;AAAA;;AAEjB;AACA,iBAAK+B,GAAL,CAASC,SAAT,GAAqBC,IAArB,CACE,UAAChB,IAAD,EAAU;AAER;AACA,kBAAIA,IAAJ,EAAU;AAER;AACA,sBAAI,CAACjB,OAAL,CAAaa,GAAb,CAAiB,UAAjB,EAA6B;AAAEC,sBAAI,EAAE;AAAR,iBAA7B,EAAiDC,SAAjD,CACE,UAACmB,KAAD,EAAW;AACT,wBAAI,CAACC,QAAL,GAAgBC,IAAI,CAACC,KAAL,CAAWH,KAAX,CAAhB,CADS,CAGT;;AACA,wBAAI,CAAClC,OAAL,CAAaa,GAAb,CAAiB,aAAjB,EAAgC;AAAEC,wBAAI,EAAE;AAAR,mBAAhC,EAAoDC,SAApD,CACE,UAACuB,KAAD,EAAW;AACT,0BAAI,CAACC,WAAL,GAAmBH,IAAI,CAACC,KAAL,CAAWC,KAAX,CAAnB;AACD,mBAHH;AAKD,iBAVH,EAHQ,CAgBR;;AACD,eAjBD,MAiBO;AACL,sBAAI,CAACxC,MAAL,CAAY0C,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD;AACF,aAxBH;AAyBD,WA7CoB,CA+CrB;;AA/CqB;AAAA;AAAA,gDAgDC;AAEpB;AACA,gBAAIC,UAAU,GAAG,EAAjB,CAHoB,CAKpB;;AACA,oBAAQ,KAAKN,QAAL,CAAcO,QAAtB;AAEE,mBAAK,QAAL;AACED,0BAAU,GAAG,sCAAb;AACA;;AAEF,mBAAK,UAAL;AACE;AACA;;AAEF,mBAAK,SAAL;AACE;AACA;;AAEF,mBAAK,QAAL;AACE;AACA;AAEF;AAlBF,aANoB,CA2BpB;;;AACA,gBAAI,KAAKV,GAAL,CAASY,OAAT,CAAiB,KAAKR,QAAL,CAAcS,WAA/B,wFAAJ,EAAyH;AAEvH;AACAC,oBAAM,CAACC,IAAP,CAAYL,UAAZ;AACD;AACF;AAjFoB;;AAAA;AAAA,S;;;;gBATd;;gBACA;;gBACA;;;;AAOIX,gBAAU,6DALtB,gEAAU;AACTiB,gBAAQ,EAAE,YADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,sGAFS;;;;AAAA,OAAV,CAKsB,GAAVlB,UAAU,CAAV","file":"usuario-perfil-perfil-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button icon=\\\"chevron-back\\\" defaultHref=\\\"/\\\" routerLink=\\\"/\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    <ion-title>Seu Perfil</ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <div class=\\\"ion-padding\\\" *ngIf=\\\"userData && userProfile\\\">\\r\\n\\r\\n    <ion-card>\\r\\n\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>Perfil do Login</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <img [src]=\\\"[userData.photoURL]\\\" [alt]=\\\"[userData.displayName]\\\">\\r\\n      <ion-card-content>\\r\\n        <h3 style=\\\"font-size: 1.2rem; font-weight: bold;\\\">{{ userData.displayName }}</h3>\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col>{{ userData.email }}</ion-col>\\r\\n            <ion-col class=\\\"ion-text-end\\\">\\r\\n\\r\\n              <!-- Editar perfil da rede social -->\\r\\n              <ion-button size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"editProviderProfile()\\\">\\r\\n                <ion-icon name=\\\"create\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-card-content>\\r\\n\\r\\n      <hr>\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>Dados Pessoais</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-card-content>\\r\\n        <ul>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Nome:</ion-text>{{ userProfile.name }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">CPF:</ion-text>{{ userProfile.cpf }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Nascimento:</ion-text>{{ userProfile.birth | date: 'dd/MM/yyyy' }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Gênero:</ion-text>{{ userProfile.gender }}\\r\\n          </li>\\r\\n        </ul>\\r\\n      </ion-card-content>\\r\\n\\r\\n      <hr>\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>Dados de Contato</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-card-content>\\r\\n        <ul>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">E-mail:</ion-text>\\r\\n            {{ userProfile.email }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Telefone Residêncial:</ion-text>\\r\\n            {{ userProfile.homePhone }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Telefone Celular:</ion-text>\\r\\n            {{ userProfile.cellPhone }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">WhatsApp</ion-text>\\r\\n            {{ userProfile.whatsApp }}\\r\\n          </li>\\r\\n        </ul>\\r\\n      </ion-card-content>\\r\\n\\r\\n      <hr>\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>Outras Informações</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-card-content>\\r\\n        <ul>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Seleção 1:</ion-text>\\r\\n            {{ userProfile.selectStatic }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Seleção 2:</ion-text>\\r\\n            {{ userProfile.selectDynamic }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Nível de Acesso:</ion-text>\\r\\n            {{ userProfile.type }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Status:</ion-text>\\r\\n            {{ userProfile.status }}\\r\\n          </li>\\r\\n        </ul>\\r\\n      </ion-card-content>\\r\\n\\r\\n    </ion-card>\\r\\n\\r\\n    <ion-button expand=\\\"block\\\" class=\\\"ion-no-margin ion-margin-vertical\\\" routerLink=\\\"/usuario/editar\\\">\\r\\n      <ion-icon name=\\\"create\\\"></ion-icon>&nbsp;\\r\\n      Editar Perfil\\r\\n    </ion-button>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"ion-padding\\\">\\r\\n\\r\\n    <pre>\\r\\nVer o perfil para a o usuário logado.\\r\\n\\r\\n[x] Usuário logado\\r\\n[ ] Usuário não logado\\r\\n[ ] Menu lateral\\r\\n[ ] Menu inferior\\r\\n[x] Seta de retorno\\r\\nLocal: 'app/usuario/perfil/perfil.page'\\r\\nRota: /usuario/perfil\\r\\nRoteamento: app/app-routing.module.ts\\r\\n    </pre>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</ion-content>\";","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n// Importa dependências\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public alertController: AlertController,\r\n\r\n    // Injeção das dependências\r\n    private storage: StorageMap,\r\n  ) { }\r\n\r\n  async myAlert(title: string, text: string) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: text,\r\n      buttons: [{\r\n        text: 'Ok',\r\n        handler: () => { return true; }\r\n      }]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Método que detecta a presença do perfil local\r\n  async isProfile() {\r\n\r\n    // Constrói a promise\r\n    return new Promise<any>((resolve, reject) => {\r\n\r\n      // Lê o armazenamento local\r\n      this.storage.get('userProfile', { type: 'string' }).subscribe({\r\n        next: (data) => {\r\n\r\n          // Se perfil, retorna 'true'\r\n          if (data) resolve(true);\r\n\r\n          // Se não tem perfil, retorna 'false'\r\n          else resolve(false);\r\n        },\r\n\r\n        // Em caso de erro ao tentar acessar 'storage'\r\n        error: (error) => console.error(error)\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PerfilPage } from './perfil.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PerfilPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PerfilPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PerfilPageRoutingModule } from './perfil-routing.module';\r\n\r\nimport { PerfilPage } from './perfil.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    PerfilPageRoutingModule\r\n  ],\r\n  declarations: [PerfilPage]\r\n})\r\nexport class PerfilPageModule {}\r\n","export default \"ion-card {\\n  margin: 1rem 0 auto 0;\\n}\\n\\nion-card img {\\n  margin: auto;\\n  display: block;\\n  width: 100%;\\n  max-width: 320px;\\n}\\n\\nion-card ion-grid,\\nion-card ion-row,\\nion-card ion-col {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nion-card-content ul {\\n  padding: 0;\\n  list-style: none;\\n}\\n\\nion-card-content ul li {\\n  margin-bottom: 0.5rem;\\n}\\n\\nion-card-content ul li ion-text {\\n  font-weight: bold;\\n  display: block;\\n  font-size: small;\\n}\\n\\nion-card hr {\\n  border-bottom: 1px dotted grey;\\n  margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXN1YXJpby9wZXJmaWwvcGVyZmlsLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHFCQUFBO0FBQ0o7O0FBRUE7RUFDSSxZQUFBO0VBQ0EsY0FBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtBQUNKOztBQUVBOzs7RUFHSSxTQUFBO0VBQ0EsVUFBQTtBQUNKOztBQUVBO0VBQ0ksVUFBQTtFQUNBLGdCQUFBO0FBQ0o7O0FBRUE7RUFDSSxxQkFBQTtBQUNKOztBQUVBO0VBQ0ksaUJBQUE7RUFDQSxjQUFBO0VBQ0EsZ0JBQUE7QUFDSjs7QUFFQTtFQUNJLDhCQUFBO0VBQ0EsU0FBQTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvdXN1YXJpby9wZXJmaWwvcGVyZmlsLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jYXJkIHtcclxuICAgIG1hcmdpbjogMXJlbSAwIGF1dG8gMDtcclxufVxyXG5cclxuaW9uLWNhcmQgaW1nIHtcclxuICAgIG1hcmdpbiAgIDogYXV0bztcclxuICAgIGRpc3BsYXkgIDogYmxvY2s7XHJcbiAgICB3aWR0aCAgICA6IDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDMyMHB4O1xyXG59XHJcblxyXG5pb24tY2FyZCBpb24tZ3JpZCxcclxuaW9uLWNhcmQgaW9uLXJvdyxcclxuaW9uLWNhcmQgaW9uLWNvbCB7XHJcbiAgICBtYXJnaW4gOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxuaW9uLWNhcmQtY29udGVudCB1bCB7XHJcbiAgICBwYWRkaW5nICAgOiAwO1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxufVxyXG5cclxuaW9uLWNhcmQtY29udGVudCB1bCBsaSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAuNXJlbTtcclxufVxyXG5cclxuaW9uLWNhcmQtY29udGVudCB1bCBsaSBpb24tdGV4dCB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGRpc3BsYXkgICAgOiBibG9jaztcclxuICAgIGZvbnQtc2l6ZSAgOiBzbWFsbDtcclxufVxyXG5cclxuaW9uLWNhcmQgaHIge1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZCBncmV5O1xyXG4gICAgbWFyZ2luICAgICAgIDogMDtcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n// Importa dependências\r\nimport { Router } from '@angular/router';\r\nimport { AppService } from 'src/app/services/app.service';\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\n\r\n@Component({\r\n  selector: 'app-perfil',\r\n  templateUrl: './perfil.page.html',\r\n  styleUrls: ['./perfil.page.scss'],\r\n})\r\nexport class PerfilPage implements OnInit {\r\n\r\n  // Variáveis para dados do usuário\r\n  userData: any;\r\n  userProfile: any;\r\n\r\n  constructor(\r\n\r\n    // Injeta dependências\r\n    public router: Router,\r\n    public app: AppService,\r\n    public storage: StorageMap,\r\n  ) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  // 'ionViewWillEnter' é executado SEMPRE que a página (re)carrega\r\n  ionViewWillEnter() {\r\n\r\n    // Testa o perfil local\r\n    this.app.isProfile().then(\r\n      (data) => {\r\n\r\n        // Se existe, faz as ações da página\r\n        if (data) {\r\n\r\n          // Obtém dados do login local e armazena em 'userData'\r\n          this.storage.get('userData', { type: 'string' }).subscribe(\r\n            (uData) => {\r\n              this.userData = JSON.parse(uData);\r\n\r\n              // Obtém dados do perfil local e armazena em 'userProfile'\r\n              this.storage.get('userProfile', { type: 'string' }).subscribe(\r\n                (pData) => {\r\n                  this.userProfile = JSON.parse(pData);\r\n                }\r\n              );\r\n            }\r\n          );\r\n\r\n          // Se não existe perfil, vai para o cadastro de perfil\r\n        } else {\r\n          this.router.navigate(['/user/new']);\r\n        }\r\n      });\r\n  }\r\n\r\n  // Ação do botão para editar perfil do provedor de login\r\n  editProviderProfile() {\r\n\r\n    // Variável com URL do perfil, de acordo com o provedor\r\n    let profileURL = '';\r\n\r\n    // Seleciona o URL, de acordo com o provedor\r\n    switch (this.userData.provider) {\r\n\r\n      case 'google':\r\n        profileURL = 'https://myaccount.google.com/profile';\r\n        break;\r\n\r\n      case 'facebook':\r\n        // profileURL = '';\r\n        break;\r\n\r\n      case 'twitter':\r\n        // profileURL = '';\r\n        break;\r\n\r\n      case 'github':\r\n        // profileURL = '';\r\n        break;\r\n\r\n      // case ....\r\n    }\r\n\r\n    // Aviso de redirecionamento\r\n    if (this.app.myAlert(this.userData.displayName, `Atenção! Você será redirecionado para a página de perfil no provedor`)) {\r\n\r\n      // Redireciona para o perfil do usuário no provedor\r\n      window.open(profileURL);\r\n    }\r\n  }\r\n}\r\n"]}