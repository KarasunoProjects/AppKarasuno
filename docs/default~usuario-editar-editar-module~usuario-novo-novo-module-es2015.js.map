{"version":3,"sources":["./src/app/components/profile/profile.component.html","./src/app/components/profile/profile.component.scss","./src/app/components/profile/profile.component.ts","./src/app/services/app.service.ts"],"names":[],"mappings":"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","file":"default~usuario-editar-editar-module~usuario-novo-novo-module-es2015.js","sourcesContent":["export default \"<div *ngIf=\\\"userData\\\">\\r\\n\\r\\n  <h2>Olá {{ userData.displayName }}!</h2>\\r\\n\\r\\n  <p>{{ paragraph }}</p>\\r\\n  <p class=\\\"ion-text-center\\\"><small>\\r\\n      <ion-text color=\\\"danger\\\">Preencha todos os campos.</ion-text>\\r\\n    </small></p>\\r\\n\\r\\n  <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"profileSubmit()\\\">\\r\\n    <ion-input type=\\\"hidden\\\" id=\\\"id\\\" name=\\\"id\\\" formControlName=\\\"id\\\"></ion-input>\\r\\n\\r\\n    <ion-list lines=\\\"full\\\" id=\\\"profileList\\\" class=\\\"ion-no-padding\\\">\\r\\n\\r\\n      <div>Dados pessoais:</div>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"name\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Nome completo:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.name.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.name.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"profileForm.controls.name.errors.minlength\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" formControlName=\\\"name\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"birth\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Nascimento:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.birth.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.birth.errors.under14years\\\">* Deve ter 14 anos ou mais</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"date\\\" id=\\\"birth\\\" name=\\\"birth\\\" formControlName=\\\"birth\\\" placeholder=\\\"Exemplo: 27/11/1998\\\">\\r\\n        </ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"cpf\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          CPF:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.cpf.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.cpf.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"profileForm.controls.cpf.errors.pattern\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"cpf\\\" name=\\\"cpf\\\" formControlName=\\\"cpf\\\" placeholder=\\\"Somente números\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-list>\\r\\n        <ion-radio-group formControlName=\\\"gender\\\" id=\\\"gender\\\" name=\\\"gender\\\">\\r\\n          <ion-list-header>\\r\\n            <ion-label color=\\\"primary\\\" for=\\\"gender\\\">\\r\\n              Gênero:\\r\\n              <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.gender.errors\\\">\\r\\n                <small *ngIf=\\\"profileForm.controls.gender.errors.required\\\">* Obrigatório</small>\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n          </ion-list-header>\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label>Não informar</ion-label>\\r\\n            <ion-radio slot=\\\"start\\\" value=\\\"Não informar\\\"></ion-radio>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label>Feminino</ion-label>\\r\\n            <ion-radio slot=\\\"start\\\" value=\\\"Feminino\\\"></ion-radio>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label>Masculino</ion-label>\\r\\n            <ion-radio slot=\\\"start\\\" value=\\\"Masculino\\\"></ion-radio>\\r\\n          </ion-item>\\r\\n        </ion-radio-group>\\r\\n      </ion-list>\\r\\n\\r\\n      <hr>\\r\\n      <div>Contatos:</div>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"email\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          E-mail:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.email.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.email.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"profileForm.controls.email.errors.email\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"email\\\" name=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"homePhone\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Tel. residencial:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.homePhone.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.homePhone.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"profileForm.controls.homePhone.errors.pattern\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"homePhone\\\" name=\\\"homePhone\\\" formControlName=\\\"homePhone\\\"\\r\\n          placeholder=\\\"Exemplo: (21) 2345-6789\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"cellPhone\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Tel. celular:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.cellPhone.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.cellPhone.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"profileForm.controls.cellPhone.errors.pattern\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"cellPhone\\\" name=\\\"cellPhone\\\" formControlName=\\\"cellPhone\\\"\\r\\n          placeholder=\\\"Exemplo: (21) 98765-4321\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"whatsApp\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          WhatsApp:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.whatsApp.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.whatsApp.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"profileForm.controls.whatsApp.errors.pattern\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"whatsApp\\\" name=\\\"whatsApp\\\" formControlName=\\\"whatsApp\\\"\\r\\n          placeholder=\\\"Exemplo: (21) 98765-4321\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <hr>\\r\\n      <div>Opções:</div>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"selectStatic\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Seleção 1:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.selectStatic.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.selectStatic.errors.required\\\">* Obrigatório</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-select cancelText=\\\"Cancela\\\" formControlName=\\\"selectStatic\\\" placeholder=\\\"Selecione\\\" id=\\\"selectStatic\\\"\\r\\n          name=\\\"selectStatic\\\">\\r\\n          <ion-select-option value=\\\"Opção 1\\\">Opção 1</ion-select-option>\\r\\n          <ion-select-option value=\\\"Opção 2\\\">Opção 2</ion-select-option>\\r\\n          <ion-select-option value=\\\"Opção 3\\\">Opção 3</ion-select-option>\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item *ngIf=\\\"selectDynamic\\\">\\r\\n        <ion-label for=\\\"selectDynamic\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Seleção 2:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"profileForm.controls.selectDynamic.errors\\\">\\r\\n            <small *ngIf=\\\"profileForm.controls.selectDynamic.errors.required\\\">* Obrigatório</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-select cancelText=\\\"Cancela\\\" formControlName=\\\"selectDynamic\\\" placeholder=\\\"Selecione\\\" id=\\\"selectDynamic\\\"\\r\\n          name=\\\"selectDynamic\\\">\\r\\n          <ion-select-option *ngFor=\\\"let select of selectDynamic\\\" value=\\\"{{ select.option }}\\\">\\r\\n            {{ select.option }}\\r\\n          </ion-select-option>\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n\\r\\n    </ion-list>\\r\\n\\r\\n    <ion-button type=\\\"submit\\\" expand=\\\"block\\\" class=\\\"ion-margin-vertical\\\" [disabled]=\\\"profileForm.invalid\\\">{{ btnText }}\\r\\n    </ion-button>\\r\\n\\r\\n    <!-- <div>{{ profileForm.value | json}}</div> -->\\r\\n    <!-- <div>{{ profileForm.valid | json }}</div> -->\\r\\n\\r\\n  </form>\\r\\n\\r\\n</div>\";","export default \"#profileList div {\\n  padding: 1rem;\\n  font-weight: bold;\\n  background: #575717;\\n}\\n\\n#profileList hr {\\n  border: none;\\n  padding: 0.5rem;\\n  margin: 0;\\n  background: inherit;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxtQkFBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtFQUNBLGVBQUE7RUFDQSxTQUFBO0VBQ0EsbUJBQUE7QUFDSiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI3Byb2ZpbGVMaXN0IGRpdiB7XHJcbiAgICBwYWRkaW5nICAgIDogMXJlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgYmFja2dyb3VuZCA6IHJnYig4NywgODcsIDIzKTtcclxufVxyXG5cclxuI3Byb2ZpbGVMaXN0IGhyIHtcclxuICAgIGJvcmRlciAgICA6IG5vbmU7XHJcbiAgICBwYWRkaW5nICAgOiAuNXJlbTtcclxuICAgIG1hcmdpbiAgICA6IDA7XHJcbiAgICBiYWNrZ3JvdW5kOiBpbmhlcml0O1xyXG59Il19 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n// Importa dependências\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\nimport { Router } from '@angular/router';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { AppService } from '../../services/app.service'; // Serviços de uso geral\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss'],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  // Cria formulário\r\n  public profileForm: FormGroup;\r\n\r\n  // Variável com dados do usuário logado\r\n  userData: any;\r\n\r\n  // Variável com a lista \"select01\"\r\n  selectDynamic: any;\r\n\r\n  // Variável com perfil do usuário\r\n  userProfile: any;\r\n\r\n  // Textos da View\r\n  paragraph = `Você precisa cadastrar seu perfil para ter acesso aos recursos do aplicativo de forma pesonalizada.`;\r\n  btnText = `Cadastrar perfil`;\r\n  redirectPage = `/`;\r\n\r\n  constructor(\r\n\r\n    // Injeta dependências\r\n    private formBuilder: FormBuilder,\r\n    public storage: StorageMap,\r\n    public router: Router,\r\n    public fbStore: AngularFirestore,\r\n    public app: AppService,\r\n  ) {\r\n\r\n    // Obtém dados do usuário logado\r\n    this.storage.get('userData', { type: 'string' }).subscribe((data) => {\r\n\r\n      // Se não logou, vai para a raiz\r\n      if (!data) { this.router.navigate(['/']); }\r\n\r\n      // Dados do usuário logado\r\n      this.userData = JSON.parse(data);\r\n\r\n      // Cria formulário\r\n      this.profileFormCreate();\r\n\r\n      // Obtém lista \"select01\" do Firestore de forma assíncrona\r\n      this.fbStore.collection('select01', ref => ref.orderBy('option')).valueChanges().subscribe(\r\n        (selData) => {\r\n          this.selectDynamic = selData;\r\n\r\n          // Preenche o campo automaticamente com dados do perfil se estiver editando\r\n          if (this.selectDynamic && this.userProfile) {\r\n            this.profileForm.controls.selectDynamic.setValue(this.userProfile.selectDynamic);\r\n          }\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  // Define campos do formulário e validações\r\n  async profileFormCreate() {\r\n\r\n    this.profileForm = this.formBuilder.group({\r\n\r\n      id: [\r\n        this.userData.uid\r\n      ],\r\n\r\n      name: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(3)\r\n        ])\r\n      ],\r\n      birth: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          this.over14Years\r\n        ])\r\n      ],\r\n      cpf: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(/^\\b\\d{11}\\b/g)\r\n        ])\r\n      ],\r\n\r\n      gender: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required\r\n        ])\r\n      ],\r\n\r\n      email: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.email\r\n        ])\r\n      ],\r\n      homePhone: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(/^\\(?[1-9]{2}\\)? ?(?:[2-8]|8[1-9])[0-9]{3}\\-?[0-9]{4}$/)\r\n        ])\r\n      ],\r\n      cellPhone: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(/^\\(?[1-9]{2}\\)? ?(?:[2-8]|9[1-9])[0-9]{3}\\-?[0-9]{4}$/)\r\n        ])\r\n      ],\r\n      whatsApp: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(/^\\(?[1-9]{2}\\)? ?(?:[2-8]|9[1-9])[0-9]{3}\\-?[0-9]{4}$/)\r\n        ])\r\n      ],\r\n\r\n      selectStatic: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required\r\n        ])\r\n      ],\r\n\r\n      selectDynamic: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required\r\n        ])\r\n      ],\r\n\r\n      type: ['usuário'],\r\n      status: ['ativo']\r\n\r\n    });\r\n  }\r\n\r\n  // Método que trata envio do formulário\r\n  profileSubmit() {\r\n    // console.log(this.profileForm.value);\r\n\r\n    // Se formulário é inválido, sai sem fazer nada\r\n    if (this.profileForm.invalid) { return false; }\r\n\r\n    // Salva no Firestore\r\n    this.fbStore.collection('users').doc(this.userData.uid).set(this.profileForm.value)\r\n      .then((docRef) => {\r\n\r\n        // Salva no armazenamento local\r\n        this.storage.set('userProfile', JSON.stringify(this.profileForm.value)).subscribe(\r\n          () => {\r\n\r\n            // Feedback 'sucesso'\r\n            this.app.myAlert(this.userData.displayName, `Seu perfil foi cadastrado com sucesso!`);\r\n\r\n            // Limpa o formulário\r\n            this.profileForm.reset();\r\n\r\n            // Vai para a raiz\r\n            this.router.navigate([this.redirectPage]);\r\n          }\r\n        );\r\n      })\r\n      .catch(\r\n\r\n        // Tratamento de erros\r\n        (error) => {\r\n          console.error(error);\r\n          this.app.myAlert(this.userData.displayName, `Ocorreu um erro ao cadastrar seu perfil. Por favor, tente mais tarde.`);\r\n        }\r\n      );\r\n  }\r\n\r\n  // Método que valida data de nascimento\r\n  over14Years(control: AbstractControl) {\r\n    const birth = control.value;\r\n    if (birth) {\r\n      const [year, month, day] = birth.split('-');\r\n      const today = new Date();\r\n      const dateBirth = new Date(year, month, day, 0, 0, 0);\r\n      const timeToTest = 1000 * 60 * 60 * 24 * 365 * 14; // 14 anos em milissegundos...\r\n      if (today.getTime() - dateBirth.getTime() >= timeToTest) { return null; }\r\n    }\r\n    return { under14years: true };\r\n  }\r\n\r\n  // Preenche campos do form, mas só quando a View estiver pronta\r\n  ngAfterViewInit() {\r\n\r\n    // Obtém dados do perfil do armazenamento local\r\n    this.storage.get('userProfile', { type: 'string' }).subscribe(\r\n      (data) => {\r\n\r\n        // Se existem dados, é porque vai editar perfil\r\n        if (data) {\r\n\r\n          // Obtém dados\r\n          this.userProfile = JSON.parse(data);\r\n\r\n          // Atualiza campos do form com dados do perfil\r\n          this.profileForm.controls.name.setValue(this.userProfile.name);\r\n          this.profileForm.controls.birth.setValue(this.userProfile.birth);\r\n          this.profileForm.controls.cpf.setValue(this.userProfile.cpf);\r\n          this.profileForm.controls.gender.setValue(this.userProfile.gender);\r\n          this.profileForm.controls.email.setValue(this.userProfile.email);\r\n          this.profileForm.controls.homePhone.setValue(this.userProfile.homePhone);\r\n          this.profileForm.controls.cellPhone.setValue(this.userProfile.cellPhone);\r\n          this.profileForm.controls.whatsApp.setValue(this.userProfile.whatsApp);\r\n          this.profileForm.controls.selectStatic.setValue(this.userProfile.selectStatic);\r\n          this.profileForm.controls.type.setValue(this.userProfile.type);\r\n          this.profileForm.controls.status.setValue(this.userProfile.status);\r\n\r\n          // OBS: Campos dinâmicos devem ser pré-preenchidos na carga de seus valores (ver 9.4)\r\n\r\n          // Atualiza a View\r\n          this.paragraph = `Altere os campos abaixo com atenção, para editar seu perfil.`;\r\n          this.btnText = `Salvar perfil`;\r\n          this.redirectPage = `/usuario/perfil`;\r\n\r\n          // Se não existem dado de perfil, é um novo perfil\r\n        } else {\r\n\r\n          // Preenche campos com valor do login\r\n          this.profileForm.controls.name.setValue(this.userData.displayName);\r\n          this.profileForm.controls.email.setValue(this.userData.email);\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n// Importa dependências\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public alertController: AlertController,\r\n\r\n    // Injeção das dependências\r\n    private storage: StorageMap,\r\n  ) { }\r\n\r\n  async myAlert(title: string, text: string) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: text,\r\n      buttons: [{\r\n        text: 'Ok',\r\n        handler: () => { return true; }\r\n      }]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Método que detecta a presença do perfil local\r\n  async isProfile() {\r\n\r\n    // Constrói a promise\r\n    return new Promise<any>((resolve, reject) => {\r\n\r\n      // Lê o armazenamento local\r\n      this.storage.get('userProfile', { type: 'string' }).subscribe({\r\n        next: (data) => {\r\n\r\n          // Se perfil, retorna 'true'\r\n          if (data) resolve(true);\r\n\r\n          // Se não tem perfil, retorna 'false'\r\n          else resolve(false);\r\n        },\r\n\r\n        // Em caso de erro ao tentar acessar 'storage'\r\n        error: (error) => console.error(error)\r\n      });\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}