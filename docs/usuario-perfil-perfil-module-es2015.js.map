{"version":3,"sources":["./src/app/usuario/perfil/perfil.page.html","./src/app/services/app.service.ts","./src/app/usuario/perfil/perfil-routing.module.ts","./src/app/usuario/perfil/perfil.module.ts","./src/app/usuario/perfil/perfil.page.scss","./src/app/usuario/perfil/perfil.page.ts"],"names":[],"mappings":"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","file":"usuario-perfil-perfil-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button icon=\\\"chevron-back\\\" defaultHref=\\\"/\\\" routerLink=\\\"/\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    <ion-title>Seu Perfil</ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <div class=\\\"ion-padding\\\" *ngIf=\\\"userData && userProfile\\\">\\r\\n\\r\\n    <ion-card>\\r\\n\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>Perfil do Login</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <img [src]=\\\"[userData.photoURL]\\\" [alt]=\\\"[userData.displayName]\\\">\\r\\n      <ion-card-content>\\r\\n        <h3 style=\\\"font-size: 1.2rem; font-weight: bold;\\\">{{ userData.displayName }}</h3>\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col>{{ userData.email }}</ion-col>\\r\\n            <ion-col class=\\\"ion-text-end\\\">\\r\\n\\r\\n              <!-- Editar perfil da rede social -->\\r\\n              <ion-button size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"editProviderProfile()\\\">\\r\\n                <ion-icon name=\\\"create\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-card-content>\\r\\n\\r\\n      <hr>\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>Dados Pessoais</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-card-content>\\r\\n        <ul>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Nome:</ion-text>{{ userProfile.name }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">CPF:</ion-text>{{ userProfile.cpf }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Nascimento:</ion-text>{{ userProfile.birth | date: 'dd/MM/yyyy' }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Gênero:</ion-text>{{ userProfile.gender }}\\r\\n          </li>\\r\\n        </ul>\\r\\n      </ion-card-content>\\r\\n\\r\\n      <hr>\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>Dados de Contato</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-card-content>\\r\\n        <ul>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">E-mail:</ion-text>\\r\\n            {{ userProfile.email }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Telefone Residêncial:</ion-text>\\r\\n            {{ userProfile.homePhone }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Telefone Celular:</ion-text>\\r\\n            {{ userProfile.cellPhone }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">WhatsApp</ion-text>\\r\\n            {{ userProfile.whatsApp }}\\r\\n          </li>\\r\\n        </ul>\\r\\n      </ion-card-content>\\r\\n\\r\\n      <hr>\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>Outras Informações</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-card-content>\\r\\n        <ul>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Seleção 1:</ion-text>\\r\\n            {{ userProfile.selectStatic }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Seleção 2:</ion-text>\\r\\n            {{ userProfile.selectDynamic }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Nível de Acesso:</ion-text>\\r\\n            {{ userProfile.type }}\\r\\n          </li>\\r\\n          <li>\\r\\n            <ion-text color=\\\"primary\\\">Status:</ion-text>\\r\\n            {{ userProfile.status }}\\r\\n          </li>\\r\\n        </ul>\\r\\n      </ion-card-content>\\r\\n\\r\\n    </ion-card>\\r\\n\\r\\n    <ion-button expand=\\\"block\\\" class=\\\"ion-no-margin ion-margin-vertical\\\" routerLink=\\\"/usuario/editar\\\">\\r\\n      <ion-icon name=\\\"create\\\"></ion-icon>&nbsp;\\r\\n      Editar Perfil\\r\\n    </ion-button>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"ion-padding\\\">\\r\\n\\r\\n    <pre>\\r\\nVer o perfil para a o usuário logado.\\r\\n\\r\\n[x] Usuário logado\\r\\n[ ] Usuário não logado\\r\\n[ ] Menu lateral\\r\\n[ ] Menu inferior\\r\\n[x] Seta de retorno\\r\\nLocal: 'app/usuario/perfil/perfil.page'\\r\\nRota: /usuario/perfil\\r\\nRoteamento: app/app-routing.module.ts\\r\\n    </pre>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</ion-content>\";","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n// Importa dependências\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public alertController: AlertController,\r\n\r\n    // Injeção das dependências\r\n    private storage: StorageMap,\r\n  ) { }\r\n\r\n  async myAlert(title: string, text: string) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: text,\r\n      buttons: [{\r\n        text: 'Ok',\r\n        handler: () => { return true; }\r\n      }]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Método que detecta a presença do perfil local\r\n  async isProfile() {\r\n\r\n    // Constrói a promise\r\n    return new Promise<any>((resolve, reject) => {\r\n\r\n      // Lê o armazenamento local\r\n      this.storage.get('userProfile', { type: 'string' }).subscribe({\r\n        next: (data) => {\r\n\r\n          // Se perfil, retorna 'true'\r\n          if (data) resolve(true);\r\n\r\n          // Se não tem perfil, retorna 'false'\r\n          else resolve(false);\r\n        },\r\n\r\n        // Em caso de erro ao tentar acessar 'storage'\r\n        error: (error) => console.error(error)\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PerfilPage } from './perfil.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PerfilPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PerfilPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PerfilPageRoutingModule } from './perfil-routing.module';\r\n\r\nimport { PerfilPage } from './perfil.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    PerfilPageRoutingModule\r\n  ],\r\n  declarations: [PerfilPage]\r\n})\r\nexport class PerfilPageModule {}\r\n","export default \"ion-card {\\n  margin: 1rem 0 auto 0;\\n}\\n\\nion-card img {\\n  margin: auto;\\n  display: block;\\n  width: 100%;\\n  max-width: 320px;\\n}\\n\\nion-card ion-grid,\\nion-card ion-row,\\nion-card ion-col {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nion-card-content ul {\\n  padding: 0;\\n  list-style: none;\\n}\\n\\nion-card-content ul li {\\n  margin-bottom: 0.5rem;\\n}\\n\\nion-card-content ul li ion-text {\\n  font-weight: bold;\\n  display: block;\\n  font-size: small;\\n}\\n\\nion-card hr {\\n  border-bottom: 1px dotted grey;\\n  margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXN1YXJpby9wZXJmaWwvcGVyZmlsLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHFCQUFBO0FBQ0o7O0FBRUE7RUFDSSxZQUFBO0VBQ0EsY0FBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtBQUNKOztBQUVBOzs7RUFHSSxTQUFBO0VBQ0EsVUFBQTtBQUNKOztBQUVBO0VBQ0ksVUFBQTtFQUNBLGdCQUFBO0FBQ0o7O0FBRUE7RUFDSSxxQkFBQTtBQUNKOztBQUVBO0VBQ0ksaUJBQUE7RUFDQSxjQUFBO0VBQ0EsZ0JBQUE7QUFDSjs7QUFFQTtFQUNJLDhCQUFBO0VBQ0EsU0FBQTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvdXN1YXJpby9wZXJmaWwvcGVyZmlsLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jYXJkIHtcclxuICAgIG1hcmdpbjogMXJlbSAwIGF1dG8gMDtcclxufVxyXG5cclxuaW9uLWNhcmQgaW1nIHtcclxuICAgIG1hcmdpbiAgIDogYXV0bztcclxuICAgIGRpc3BsYXkgIDogYmxvY2s7XHJcbiAgICB3aWR0aCAgICA6IDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDMyMHB4O1xyXG59XHJcblxyXG5pb24tY2FyZCBpb24tZ3JpZCxcclxuaW9uLWNhcmQgaW9uLXJvdyxcclxuaW9uLWNhcmQgaW9uLWNvbCB7XHJcbiAgICBtYXJnaW4gOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxuaW9uLWNhcmQtY29udGVudCB1bCB7XHJcbiAgICBwYWRkaW5nICAgOiAwO1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxufVxyXG5cclxuaW9uLWNhcmQtY29udGVudCB1bCBsaSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAuNXJlbTtcclxufVxyXG5cclxuaW9uLWNhcmQtY29udGVudCB1bCBsaSBpb24tdGV4dCB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGRpc3BsYXkgICAgOiBibG9jaztcclxuICAgIGZvbnQtc2l6ZSAgOiBzbWFsbDtcclxufVxyXG5cclxuaW9uLWNhcmQgaHIge1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZCBncmV5O1xyXG4gICAgbWFyZ2luICAgICAgIDogMDtcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n// Importa dependências\r\nimport { Router } from '@angular/router';\r\nimport { AppService } from 'src/app/services/app.service';\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\n\r\n@Component({\r\n  selector: 'app-perfil',\r\n  templateUrl: './perfil.page.html',\r\n  styleUrls: ['./perfil.page.scss'],\r\n})\r\nexport class PerfilPage implements OnInit {\r\n\r\n  // Variáveis para dados do usuário\r\n  userData: any;\r\n  userProfile: any;\r\n\r\n  constructor(\r\n\r\n    // Injeta dependências\r\n    public router: Router,\r\n    public app: AppService,\r\n    public storage: StorageMap,\r\n  ) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  // 'ionViewWillEnter' é executado SEMPRE que a página (re)carrega\r\n  ionViewWillEnter() {\r\n\r\n    // Testa o perfil local\r\n    this.app.isProfile().then(\r\n      (data) => {\r\n\r\n        // Se existe, faz as ações da página\r\n        if (data) {\r\n\r\n          // Obtém dados do login local e armazena em 'userData'\r\n          this.storage.get('userData', { type: 'string' }).subscribe(\r\n            (uData) => {\r\n              this.userData = JSON.parse(uData);\r\n\r\n              // Obtém dados do perfil local e armazena em 'userProfile'\r\n              this.storage.get('userProfile', { type: 'string' }).subscribe(\r\n                (pData) => {\r\n                  this.userProfile = JSON.parse(pData);\r\n                }\r\n              );\r\n            }\r\n          );\r\n\r\n          // Se não existe perfil, vai para o cadastro de perfil\r\n        } else {\r\n          this.router.navigate(['/user/new']);\r\n        }\r\n      });\r\n  }\r\n\r\n  // Ação do botão para editar perfil do provedor de login\r\n  editProviderProfile() {\r\n\r\n    // Variável com URL do perfil, de acordo com o provedor\r\n    let profileURL = '';\r\n\r\n    // Seleciona o URL, de acordo com o provedor\r\n    switch (this.userData.provider) {\r\n\r\n      case 'google':\r\n        profileURL = 'https://myaccount.google.com/profile';\r\n        break;\r\n\r\n      case 'facebook':\r\n        // profileURL = '';\r\n        break;\r\n\r\n      case 'twitter':\r\n        // profileURL = '';\r\n        break;\r\n\r\n      case 'github':\r\n        // profileURL = '';\r\n        break;\r\n\r\n      // case ....\r\n    }\r\n\r\n    // Aviso de redirecionamento\r\n    if (this.app.myAlert(this.userData.displayName, `Atenção! Você será redirecionado para a página de perfil no provedor`)) {\r\n\r\n      // Redireciona para o perfil do usuário no provedor\r\n      window.open(profileURL);\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}