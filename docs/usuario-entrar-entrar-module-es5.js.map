{"version":3,"sources":["webpack:///src/app/usuario/entrar/entrar.page.html","webpack:///src/app/services/app.service.ts","webpack:///src/app/usuario/entrar/entrar-routing.module.ts","webpack:///src/app/usuario/entrar/entrar.module.ts","webpack:///src/app/usuario/entrar/entrar.page.scss","webpack:///src/app/usuario/entrar/entrar.page.ts"],"names":["AppService","router","alertController","storage","title","text","create","header","message","buttons","handler","alert","present","Promise","resolve","reject","get","type","subscribe","next","data","error","console","providedIn","routes","path","component","EntrarPageRoutingModule","imports","forChild","exports","EntrarPageModule","declarations","EntrarPage","fbAuth","fbStore","app","events","provider","authProvider","auth","GoogleAuthProvider","signInWithPopup","then","uData","userData","uid","user","displayName","email","photoURL","set","JSON","stringify","publish","firestore","collection","doc","exists","userProfile","id","myAlert","navigate","log","selector","template"],"mappings":"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","file":"usuario-entrar-entrar-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button icon=\\\"chevron-back\\\" defaultHref=\\\"/\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    <ion-title>Entrar</ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <div class=\\\"ion-padding\\\">\\r\\n\\r\\n    <h2>Olá!</h2>\\r\\n\\r\\n    <p>Para que você possa acessar os serviços deste aplicativo, é necessário estar logado(a)...</p>\\r\\n    <p>Escolha um método de entrada clicando no botão.</p>\\r\\n\\r\\n    <div class=\\\"login-table\\\">\\r\\n\\r\\n      <p>Entrar com:</p>\\r\\n\\r\\n      <!-- Botões de login com redes sociais -->\\r\\n\\r\\n      <ion-button expand=\\\"block\\\" (click)=\\\"login('google')\\\">\\r\\n        <ion-icon name=\\\"logo-google\\\" slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>Google</ion-label>\\r\\n      </ion-button>\\r\\n\\r\\n      <ion-button class=\\\"ion-margin-top\\\" expand=\\\"block\\\" (click)=\\\"login('facebook')\\\" disabled=\\\"true\\\">\\r\\n        <ion-icon name=\\\"logo-facebook\\\" slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>Facebook</ion-label>\\r\\n      </ion-button>\\r\\n\\r\\n      <ion-button class=\\\"ion-margin-top\\\" expand=\\\"block\\\" (click)=\\\"login('twitter')\\\" disabled=\\\"true\\\">\\r\\n        <ion-icon name=\\\"logo-twitter\\\" slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>Twitter</ion-label>\\r\\n      </ion-button>\\r\\n\\r\\n      <ion-button class=\\\"ion-margin-top\\\" expand=\\\"block\\\" (click)=\\\"login('github')\\\" disabled=\\\"true\\\">\\r\\n        <ion-icon name=\\\"logo-github\\\" slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>GitHub</ion-label>\\r\\n      </ion-button>\\r\\n\\r\\n      <!-- ... -->\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <pre>\\r\\nLogin do usuário no aplicativo.\\r\\n\\r\\n[ ] Usuário logado\\r\\n[x] Usuário não logado\\r\\n[ ] Menu lateral\\r\\n[ ] Menu inferior\\r\\n[x] Seta de retorno\\r\\nLocal: 'app/usuario/entrar/entrar.page'\\r\\nRota: /usuario/entrar\\r\\nRoteamento: app/app-routing.module.ts\\r\\n    </pre>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</ion-content>\";","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n// Importa dependências\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public alertController: AlertController,\r\n\r\n    // Injeção das dependências\r\n    private storage: StorageMap,\r\n  ) { }\r\n\r\n  async myAlert(title: string, text: string) {\r\n    const alert = await this.alertController.create({\r\n      header: title,\r\n      message: text,\r\n      buttons: [{\r\n        text: 'Ok',\r\n        handler: () => { return true; }\r\n      }]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Método que detecta a presença do perfil local\r\n  async isProfile() {\r\n\r\n    // Constrói a promise\r\n    return new Promise<any>((resolve, reject) => {\r\n\r\n      // Lê o armazenamento local\r\n      this.storage.get('userProfile', { type: 'string' }).subscribe({\r\n        next: (data) => {\r\n\r\n          // Se perfil, retorna 'true'\r\n          if (data) resolve(true);\r\n\r\n          // Se não tem perfil, retorna 'false'\r\n          else resolve(false);\r\n        },\r\n\r\n        // Em caso de erro ao tentar acessar 'storage'\r\n        error: (error) => console.error(error)\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EntrarPage } from './entrar.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EntrarPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class EntrarPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { EntrarPageRoutingModule } from './entrar-routing.module';\r\n\r\nimport { EntrarPage } from './entrar.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    EntrarPageRoutingModule\r\n  ],\r\n  declarations: [EntrarPage]\r\n})\r\nexport class EntrarPageModule {}\r\n","export default \"@charset \\\"UTF-8\\\";\\n/* 3.1) Formata lista de botões */\\n.login-table {\\n  display: table;\\n  margin: auto;\\n  width: 220px;\\n}\\n.login-table ion-label {\\n  padding-left: 0.5rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXN1YXJpby9lbnRyYXIvZW50cmFyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0I7QUFBaEIsaUNBQUE7QUFDQTtFQUNJLGNBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtBQUVKO0FBQ0E7RUFDSSxvQkFBQTtBQUVKIiwiZmlsZSI6InNyYy9hcHAvdXN1YXJpby9lbnRyYXIvZW50cmFyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBjaGFyc2V0IFwiVVRGLThcIjtcbi8qIDMuMSkgRm9ybWF0YSBsaXN0YSBkZSBib3TDtWVzICovXG4ubG9naW4tdGFibGUge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgbWFyZ2luOiBhdXRvO1xuICB3aWR0aDogMjIwcHg7XG59XG5cbi5sb2dpbi10YWJsZSBpb24tbGFiZWwge1xuICBwYWRkaW5nLWxlZnQ6IDAuNXJlbTtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n// Importa dependências\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport firebase from 'firebase/app';\r\n\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\nimport { Router } from '@angular/router';\r\nimport { AppService } from '../../services/app.service';\r\n\r\n// Dispara eventos globais\r\nimport { EventsService } from '../../services/events.service';\r\n\r\n@Component({\r\n  selector: 'app-entrar',\r\n  templateUrl: './entrar.page.html',\r\n  styleUrls: ['./entrar.page.scss'],\r\n})\r\nexport class EntrarPage implements OnInit {\r\n\r\n  // Variáveis locais\r\n  authProvider: any; // Provedor de login social\r\n  userData: any; // Dados do login do usuário\r\n  userProfile: any; // Dados do perfil do usuário\r\n\r\n  constructor(\r\n\r\n    // Injeção de dependências\r\n    public fbAuth: AngularFireAuth,\r\n    public fbStore: AngularFirestore,\r\n    private storage: StorageMap,\r\n    public app: AppService,\r\n    public router: Router,\r\n\r\n    // Dispara eventos globais\r\n    public events: EventsService,\r\n  ) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  // Ação do botão de login\r\n  async login(provider: string) {\r\n\r\n    // Seleciona provedor de login social\r\n    // - Adicione outros provedores conforme a configuração do Firebase Authentication\r\n    switch (provider) {\r\n\r\n      case 'google':\r\n        this.authProvider = new firebase.auth.GoogleAuthProvider();\r\n        break;\r\n\r\n      case 'facebook':\r\n        alert('Você precisa implementar isso no Firebase Authentication!');\r\n        return false;\r\n        // this.authProvider = new firebase.auth.FacebookAuthProvider();\r\n        break;\r\n\r\n      case 'twitter':\r\n        alert('Você precisa implementar isso no Firebase Authentication!');\r\n        return false;\r\n        // this.authProvider = new firebase.auth.TwitterAuthProvider();\r\n        break;\r\n\r\n      case 'github':\r\n        alert('Você precisa implementar isso no Firebase Authentication!');\r\n        return false;\r\n        // this.authProvider = new firebase.auth.GithubAuthProvider();\r\n        break;\r\n\r\n      // case ....\r\n\r\n    }\r\n\r\n    // Login com popup no Firebase Auth\r\n    this.fbAuth.signInWithPopup(this.authProvider)\r\n\r\n      // Se logou\r\n      .then((uData) => {\r\n\r\n        // Formata dados do usuário\r\n        this.userData = {\r\n          uid: uData.user.uid,\r\n          displayName: uData.user.displayName,\r\n          email: uData.user.email,\r\n          photoURL: uData.user.photoURL,\r\n          provider\r\n        };\r\n\r\n        // Salva no armazenamento local\r\n        this.storage.set('userData', JSON.stringify(this.userData)).subscribe({\r\n          next: () => {\r\n\r\n            // 3.6) Atualiza 'userData' no menu principal também (app.component.ts)\r\n            this.events.publish('userData', this.userData);\r\n\r\n            // Verifica se tem perfil no Firestore\r\n            this.fbStore.firestore.collection('users').doc(this.userData.uid).get()\r\n              .then((data) => {\r\n\r\n                // Se tem perfil\r\n                if (data.exists) {\r\n\r\n                  // Obtém dados do perfil\r\n                  this.userProfile = data.data();\r\n                  this.userProfile.uid = data.id;\r\n\r\n                  // Grava perfil no armazenamento local\r\n                  this.storage.set('userProfile', JSON.stringify(this.userProfile)).subscribe({\r\n                    next: () => {\r\n\r\n                      // Exibe alerta\r\n                      this.app.myAlert(\r\n                        `Olá ${this.userData.displayName}`,\r\n                        `Você já pode acessar todos os recursos do aplicativo.`\r\n                      );\r\n\r\n                      // Vai para a raiz\r\n                      this.router.navigate(['/']);\r\n                    },\r\n                    error: (error) => { console.error(error); }\r\n                  });\r\n\r\n                  // Se não tem perfil\r\n                } else {\r\n\r\n                  // Exibe alerta e vai para a rota '/usuario/novo'\r\n                  this.app.myAlert(\r\n                    `Olá ${this.userData.displayName}`,\r\n                    `Você precisa completar seu cadastro para usar todos os recursos do aplicativo.`\r\n                  );\r\n\r\n                  // Vai para o cadatro de novo perfil\r\n                  this.router.navigate(['/usuario/novo']);\r\n                }\r\n              })\r\n              .catch((error) => { console.error(error); });\r\n          },\r\n          error: (error) => { console.error(error); }\r\n        });\r\n      })\r\n      .catch((error) => { console.log(error); });\r\n  }\r\n}\r\n"]}